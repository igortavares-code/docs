"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[198],{5979:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"building-with-ory/react-native-ory-auth","title":"Adding Authentication with Ory to a React Native App","description":"Step-by-step guide on how to integrate Ory Kratos authentication in a React Native app.","source":"@site/docs/building-with-ory/react-native-ory-auth.md","sourceDirName":"building-with-ory","slug":"/building-with-ory/react-native-ory-auth","permalink":"/docs/docs/building-with-ory/react-native-ory-auth","draft":false,"unlisted":false,"editUrl":"https://github.com/igortavares-code/docs/tree/main/docs/building-with-ory/react-native-ory-auth.md","tags":[],"version":"current","frontMatter":{"id":"react-native-ory-auth","title":"Adding Authentication with Ory to a React Native App","author":"Igor Silva","sidebar_label":"React Native Auth Integration","description":"Step-by-step guide on how to integrate Ory Kratos authentication in a React Native app."},"sidebar":"tutorialSidebar","previous":{"title":"Building with Ory","permalink":"/docs/docs/category/building-with-ory"},"next":{"title":"Whirlpool","permalink":"/docs/docs/category/whirlpool"}}');var s=r(4848),i=r(8453);const o={id:"react-native-ory-auth",title:"Adding Authentication with Ory to a React Native App",author:"Igor Silva",sidebar_label:"React Native Auth Integration",description:"Step-by-step guide on how to integrate Ory Kratos authentication in a React Native app."},a="Adding Authentication with Ory to a React Native App",l={},c=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"Step 1 \u2014 Run Ory Kratos Locally",id:"step-1--run-ory-kratos-locally",level:3},{value:"1. Start Ory Kratos",id:"1-start-ory-kratos",level:4},{value:"\ud83d\udd27 Config Improvements",id:"-config-improvements",level:3},{value:"2. Verify Kratos is running",id:"2-verify-kratos-is-running",level:4},{value:"Step 2 \u2014 Connect Your React Native App",id:"step-2--connect-your-react-native-app",level:3},{value:"1. Install dependencies",id:"1-install-dependencies",level:4},{value:"2. Configure the API client",id:"2-configure-the-api-client",level:4},{value:"3. Implement a login flow",id:"3-implement-a-login-flow",level:4},{value:"4. Notes",id:"4-notes",level:4},{value:"Step 3 \u2014 Create Login and Registration Screens",id:"step-3--create-login-and-registration-screens",level:3},{value:"1. Create Login Screen",id:"1-create-login-screen",level:4},{value:"2. Create Registration Screen",id:"2-create-registration-screen",level:4},{value:"3. Notes",id:"3-notes",level:4},{value:"Step 4 \u2014 Handle Sessions and Logout",id:"step-4--handle-sessions-and-logout",level:3},{value:"1. Check User Session",id:"1-check-user-session",level:4},{value:"2. Implement Logout",id:"2-implement-logout",level:4},{value:"3. Integrate in Screens",id:"3-integrate-in-screens",level:4},{value:"4. Notes",id:"4-notes-1",level:4},{value:"Step 5 \u2014 Test the Authentication Flow",id:"step-5--test-the-authentication-flow",level:3},{value:"1. Start your app",id:"1-start-your-app",level:4},{value:"2. Register a new user",id:"2-register-a-new-user",level:4},{value:"3. Login with the new user",id:"3-login-with-the-new-user",level:4},{value:"4. Check session",id:"4-check-session",level:4},{value:"5. Logout",id:"5-logout",level:4},{value:"Step 6 \u2014 Optional Enhancements / Next Steps",id:"step-6--optional-enhancements--next-steps",level:3}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"adding-authentication-with-ory-to-a-react-native-app",children:"Adding Authentication with Ory to a React Native App"})}),"\n",(0,s.jsxs)(n.p,{children:["This tutorial shows how to integrate ",(0,s.jsx)(n.strong,{children:"Ory Kratos"})," into a React Native app, enabling secure login and registration.",(0,s.jsx)(n.br,{}),"\n","You'll learn to run Ory locally, connect your app, and protect user data with authentication."]}),"\n",(0,s.jsxs)(n.p,{children:["Authentication is a core part of most applications: it verifies who a user is before granting access to data or features.",(0,s.jsx)(n.br,{}),"\n","Before we start, let's clarify the difference between authentication and authorization."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Authentication"})," (authn) confirms who a user is.",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Authorization"})," (authz) defines what a user can do.",(0,s.jsx)(n.br,{}),"\n","This tutorial focuses on ",(0,s.jsx)(n.strong,{children:"authentication"}),"."]})}),"\n",(0,s.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.p,{children:"Before starting this tutorial, make sure you have the following installed and ready:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Basic knowledge of React Native"})," \u2013 understanding of components, state management, and navigation."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Node.js (\u226518, LTS recommended)"})," installed. ",(0,s.jsx)(n.a,{href:"https://nodejs.org/",children:"Download Node.js"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Expo CLI"})," installed (we\u2019ll use Expo for simplicity). ",(0,s.jsx)(n.a,{href:"https://docs.expo.dev/get-started/installation/",children:"Install Expo CLI"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ory CLI"})," installed to run Ory Kratos locally. ",(0,s.jsx)(n.a,{href:"https://www.ory.sh/docs/guides/cli/installation",children:"Ory CLI installation guide"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Docker Desktop"})," (or another container runtime) to run Ory services. ",(0,s.jsx)(n.a,{href:"https://www.docker.com/products/docker-desktop/",children:"Docker Desktop"})]}),"\n",(0,s.jsxs)(n.li,{children:["A code editor such as ",(0,s.jsx)(n.strong,{children:"VS Code"}),". ",(0,s.jsx)(n.a,{href:"https://code.visualstudio.com/",children:"VS Code"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Optional but recommended:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Familiarity with sessions, login flows, and JSON APIs."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"step-1--run-ory-kratos-locally",children:"Step 1 \u2014 Run Ory Kratos Locally"}),"\n",(0,s.jsx)(n.p,{children:"In this step, you'll start Ory Kratos locally using Docker. This will provide the backend services needed for authentication."}),"\n",(0,s.jsx)(n.h4,{id:"1-start-ory-kratos",children:"1. Start Ory Kratos"}),"\n",(0,s.jsx)(n.p,{children:"You can start Kratos in two ways:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Quick test (development mode)"})," \u2013 runs in-memory with temporary data. Good for fast prototyping, but all identities are lost when the container stops."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docker run --rm -it \\\r\n    -p 4433:4433 \\\r\n    -p 4434:4434 \\\r\n    oryd/kratos:latest \\\r\n    serve --dev\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Full configuration"})," \u2013 runs with a custom configuration file (",(0,s.jsx)(n.code,{children:"kratos.yml"}),") and identity schema. Required if you want custom flows, schemas, or persistence."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docker run --rm -it \\\r\n  -p 4433:4433 \\\r\n  -p 4434:4434 \\\r\n  -v ${PWD}/path/to/config:/etc/config/kratos \\\r\n  oryd/kratos:latest \\\r\n  serve -c /etc/config/kratos/kratos.yml\n"})}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.p,{children:"Windows users:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"In PowerShell, replace ' \\ ' with ' ` ' at the end of each line."}),"\n",(0,s.jsx)(n.li,{children:"In CMD, put the entire command on a single line."}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"${PWD}"})," variable: works on Linux/macOS. On Windows PowerShell, it needs to be replaced with / or an absolute path."]}),"\n"]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example Configuration"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"kratos.yml"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"serve:\r\n  public:\r\n    base_url: http://<LAN_IP>:4433/   # LAN_IP allows access from physical devices\r\n    host: 0.0.0.0                     # required for external access\r\n    port: 4433\r\n  admin:\r\n    base_url: http://<LAN_IP>:4434/\r\n    host: 0.0.0.0\r\n    port: 4434\r\n\r\ndsn: memory                           # in-memory storage (not persisted)\r\n\r\nidentity:\r\n  default_schema_id: default\r\n  schemas:\r\n    - id: default\r\n      url: file:///etc/config/kratos/identity.schema.json\r\n\r\nselfservice:\r\n  default_browser_return_url: http://localhost:4455/\r\n  flows:\r\n    login:\r\n      ui_url: http://localhost:4455/login\r\n    registration:\r\n      ui_url: http://localhost:4455/registration\r\n\r\n  methods:\r\n    password:\r\n      enabled: true                   # password-based login/registration enabled\r\n    oidc:\r\n      enabled: false\r\n\r\nlog:\r\n  level: debug                        # verbose logs during development\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"identity.schema.json"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\r\n  "$id": "https://example.com/identity.schema.json",\r\n  "$schema": "http://json-schema.org/draft-07/schema#",\r\n  "title": "Default Identity Schema",\r\n  "type": "object",\r\n  "properties": {\r\n    "traits": {\r\n      "type": "object",\r\n      "properties": {\r\n        "email": {\r\n          "type": "string",\r\n          "format": "email",\r\n          "title": "Email",\r\n          "ory.sh/kratos": {\r\n            "credentials": {\r\n              "password": {\r\n                "identifier": true\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      "required": ["email"]\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Place both files (",(0,s.jsx)(n.code,{children:"kratos.yml"})," and ",(0,s.jsx)(n.code,{children:"identity.schema.json"}),") inside your config folder, e.g., ",(0,s.jsx)(n.code,{children:"./config/"})," and mount it:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"-v ${PWD}/config:/etc/config/kratos"})}),"\n",(0,s.jsx)(n.p,{children:"This ensures Kratos can load both the config file and the identity schema."}),"\n",(0,s.jsx)(n.h3,{id:"-config-improvements",children:"\ud83d\udd27 Config Improvements"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Improvement"}),(0,s.jsx)(n.th,{children:"Why it matters"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"host: 0.0.0.0"})})}),(0,s.jsx)(n.td,{children:"Allows access from LAN devices (e.g. Expo on phone)."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.code,{children:"<LAN_IP>"})," in ",(0,s.jsx)(n.code,{children:"base_url"})]})}),(0,s.jsxs)(n.td,{children:["Works for both PC and phone, avoids ",(0,s.jsx)(n.code,{children:"localhost"})," issues."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.code,{children:"ui_url"})," values"]})}),(0,s.jsx)(n.td,{children:"Required so Kratos knows where to send users during login/registration flows."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"methods.password.enabled: true"})})}),(0,s.jsx)(n.td,{children:"Enables quick password login/registration for testing."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"log.level: debug"})})}),(0,s.jsx)(n.td,{children:"Easier debugging during development."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"dsn: memory"})})}),(0,s.jsx)(n.td,{children:"Simplifies local setup, no DB needed (\u26a0\ufe0f not for production)."})]})]})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\u26a0\ufe0f ",(0,s.jsx)(n.strong,{children:"Production note:"}),(0,s.jsx)(n.br,{}),"\n","Replace ",(0,s.jsx)(n.code,{children:"dsn: memory"})," with a real database (e.g. Postgres) and lower log verbosity.",(0,s.jsx)(n.br,{}),"\n","Example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"dsn: postgres://user:password@postgres:5432/kratos?sslmode=disable&max_conn_lifetime=1h\n"})}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"2-verify-kratos-is-running",children:"2. Verify Kratos is running"}),"\n",(0,s.jsxs)(n.p,{children:["Before testing the health endpoint, ",(0,s.jsx)(n.strong,{children:"make sure the Kratos container is running"}),". In PowerShell or a terminal, check:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"docker ps"})}),"\n",(0,s.jsxs)(n.p,{children:["You should see a container with ",(0,s.jsx)(n.code,{children:"oryd/kratos:latest"})," running.\r\nIf not, start it using your ",(0,s.jsx)(n.strong,{children:"full configuration"})," from last step again."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:'"Keep this terminal open while testing; the container stops when you close it."'})}),"\n",(0,s.jsxs)(n.p,{children:["Once the container is running, check the health endpoint ",(0,s.jsx)(n.strong,{children:"from your PC"}),":"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Linux/macOS"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:4434/health/alive\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Windows PowerShell:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-powershell",children:"Invoke-WebRequest http://localhost:4434/health/alive\n"})}),"\n",(0,s.jsx)(n.p,{children:"You should get a response like:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:'{"status":"ok"}'})}),"\n",(0,s.jsxs)(n.admonition,{title:"Mobile testing",type:"tip",children:[(0,s.jsx)(n.p,{children:"The above check uses localhost and only works on the same machine as the Kratos container.\r\nTo test from a physical device or Expo on your phone, replace localhost with your PC's LAN IP, for example:"}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"curl http://<LAN_IP>:4434/health/alive"})})]}),"\n",(0,s.jsx)(n.h3,{id:"step-2--connect-your-react-native-app",children:"Step 2 \u2014 Connect Your React Native App"}),"\n",(0,s.jsx)(n.p,{children:"Now that Ory Kratos is running locally, let's connect your React Native app to it."}),"\n",(0,s.jsx)(n.h4,{id:"1-install-dependencies",children:"1. Install dependencies"}),"\n",(0,s.jsx)(n.p,{children:"In your project folder, install Axios (for API requests) and any other required libraries:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install axios\n"})}),"\n",(0,s.jsx)(n.h4,{id:"2-configure-the-api-client",children:"2. Configure the API client"}),"\n",(0,s.jsxs)(n.p,{children:["Create a new file ",(0,s.jsx)(n.code,{children:"oryClient.js"})," to handle requests to Ory Kratos:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'import axios from "axios";\r\nimport { Platform } from "react-native";\r\nimport { getSessionTokenSync } from "./authToken";\r\n\r\n// Define host depending on the environment\r\nconst HOST =\r\n  Platform.OS === "android"\r\n    ? "10.0.2.2"   // Android emulator\r\n    : "<LAN_IP>";  // iOS simulator; replace <LAN_IP> with your machine\'s LAN IP for real devices\r\n\r\nexport const oryApi = axios.create({\r\n  baseURL: `http://${HOST}:4433`, // Kratos public endpoint\r\n  withCredentials: false, // mobile does not rely on cookies\r\n  headers: { "Content-Type": "application/json", Accept: "application/json" },\r\n  timeout: 10000,\r\n});\r\n\r\n// Interceptor: automatically adds X-Session-Token header if a token exists\r\noryApi.interceptors.request.use((config) => {\r\n  const token = getSessionTokenSync();\r\n  if (token) {\r\n    config.headers = config.headers ?? {};\r\n    (config.headers as any)["X-Session-Token"] = token;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Initialize a login or registration flow\r\nexport async function initFlow(type) {\r\n  try {\r\n    const { data } = await oryApi.get(`/self-service/${type}/api`);\r\n    return data; // contains flow data including ui.action and csrf_token\r\n  } catch (err: unknown) {\r\n    if (axios.isAxiosError(err)) {\r\n      console.error(\r\n        `Failed to initialize ${type} flow:`,\r\n        err.message,\r\n        err.code,\r\n        err.response?.status\r\n      );\r\n      throw new Error(err.message);\r\n    } else if (err instanceof Error) {\r\n      throw err;\r\n    } else {\r\n      throw new Error("Unknown error in initFlow");\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"3-implement-a-login-flow",children:"3. Implement a login flow"}),"\n",(0,s.jsx)(n.p,{children:"Example of a simple login function:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'import { oryApi, initFlow } from "./oryClient";\r\nimport { setSessionToken } from "./authToken";\r\nimport axios from "axios";\r\n\r\nexport async function login(email: string, password: string) {\r\n  // Step 1: Initialize login flow\r\n  const flow = await initFlow("login");\r\n\r\n  let actionUrl = flow.ui?.action;\r\n\r\n  try {\r\n    // Step 2: Submit login credentials\r\n    const { data } = await oryApi.post(actionUrl, {\r\n      method: "password",\r\n      identifier: email, // \u2705 login expects "identifier"\r\n      password,\r\n    });\r\n\r\n    // Step 3: Save the session token (required for mobile, no cookies)\r\n    if (data.session_token) {\r\n      await setSessionToken(data.session_token);\r\n    }\r\n\r\n    return data;\r\n  } catch (err) {\r\n    if (axios.isAxiosError(err)) {\r\n      throw new Error(\r\n        err.response?.data?.ui?.messages?.map((m: any) => m.text).join("\\n") ||\r\n          err.message\r\n      );\r\n    }\r\n    throw err;\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"4-notes",children:"4. Notes"}),"\n",(0,s.jsx)(n.p,{children:"Replace localhost with your Ory Kratos server URL when deploying."}),"\n",(0,s.jsx)(n.p,{children:"This is a basic example; later steps will show handling errors and sessions."}),"\n",(0,s.jsx)(n.h3,{id:"step-3--create-login-and-registration-screens",children:"Step 3 \u2014 Create Login and Registration Screens"}),"\n",(0,s.jsx)(n.p,{children:"Now that we have the API client set up, let's create simple login and registration screens."}),"\n",(0,s.jsx)(n.h4,{id:"1-create-login-screen",children:"1. Create Login Screen"}),"\n",(0,s.jsxs)(n.p,{children:["Create a new file ",(0,s.jsx)(n.code,{children:"LoginScreen.js"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'import React, { useState } from "react";\r\nimport {\r\n  View,\r\n  TextInput,\r\n  Button,\r\n  Alert,\r\n  ActivityIndicator,\r\n} from "react-native";\r\nimport { login } from "../login";\r\n\r\nexport default function LoginScreen() {\r\n  const [email, setEmail] = useState("");\r\n  const [password, setPassword] = useState("");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleLogin = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await login(email, password);\r\n\r\n      if (data.session_token) {\r\n        Alert.alert("\u2705 Logged in", "Session started successfully!");\r\n        // TODO: Navigate to your main app screen here\r\n      } else {\r\n        Alert.alert("\u26a0\ufe0f No session", "Login succeeded but no session token found.");\r\n      }\r\n    } catch (err: any) {\r\n      Alert.alert("Login failed", err.message || "Unknown error");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ padding: 16, flex: 1, justifyContent: "center" }}>\r\n      <TextInput\r\n        placeholder="Email"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        keyboardType="email-address"\r\n        autoCapitalize="none"\r\n        style={{\r\n          marginBottom: 12,\r\n          padding: 12,\r\n          borderWidth: 1,\r\n          borderRadius: 8,\r\n        }}\r\n      />\r\n      <TextInput\r\n        placeholder="Password"\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        secureTextEntry\r\n        style={{\r\n          marginBottom: 12,\r\n          padding: 12,\r\n          borderWidth: 1,\r\n          borderRadius: 8,\r\n        }}\r\n      />\r\n      {loading ? (\r\n        <ActivityIndicator size="large" color="#0000ff" />\r\n      ) : (\r\n        <Button title="Login" onPress={handleLogin} />\r\n      )}\r\n    </View>\r\n  );\r\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"2-create-registration-screen",children:"2. Create Registration Screen"}),"\n",(0,s.jsxs)(n.p,{children:["Create a new file ",(0,s.jsx)(n.code,{children:"RegisterScreen.js"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'import React, { useState } from "react";\r\nimport {\r\n  View,\r\n  TextInput,\r\n  Button,\r\n  Alert,\r\n  ActivityIndicator,\r\n} from "react-native";\r\nimport { oryApi, initFlow } from "../oryClient";\r\nimport axios from "axios";\r\n\r\nexport default function RegisterScreen() {\r\n  const [email, setEmail] = useState("");\r\n  const [password, setPassword] = useState("");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleRegister = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Step 1: initialize registration flow\r\n      const flow = await initFlow("registration");\r\n      let actionUrl = flow.ui?.action;\r\n      if (!actionUrl) throw new Error("No action URL found");\r\n\r\n      // Step 2: submit registration data (traits.email + password)\r\n      const { data } = await oryApi.post(actionUrl, {\r\n        method: "password",\r\n        traits: { email },\r\n        password,\r\n      });\r\n\r\n      Alert.alert("\u2705 Success", "Registration completed!");\r\n      // TODO: Navigate back to login or main screen\r\n    } catch (err: unknown) {\r\n      if (axios.isAxiosError(err)) {\r\n        const msg =\r\n          err.response?.data?.ui?.messages?.map((m: any) => m.text).join("\\n") ||\r\n          err.response?.data?.error?.reason ||\r\n          err.message;\r\n        Alert.alert("Registration failed", msg);\r\n      } else if (err instanceof Error) {\r\n        Alert.alert("Registration failed", err.message);\r\n      } else {\r\n        Alert.alert("Registration failed", "Unknown error");\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ padding: 16, flex: 1, justifyContent: "center" }}>\r\n      <TextInput\r\n        placeholder="Email"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        keyboardType="email-address"\r\n        autoCapitalize="none"\r\n        style={{\r\n          marginBottom: 12,\r\n          padding: 12,\r\n          borderWidth: 1,\r\n          borderRadius: 8,\r\n        }}\r\n      />\r\n      <TextInput\r\n        placeholder="Password"\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        secureTextEntry\r\n        style={{\r\n          marginBottom: 12,\r\n          padding: 12,\r\n          borderWidth: 1,\r\n          borderRadius: 8,\r\n        }}\r\n      />\r\n      {loading ? (\r\n        <ActivityIndicator size="large" color="#0000ff" />\r\n      ) : (\r\n        <Button title="Register" onPress={handleRegister} />\r\n      )}\r\n    </View>\r\n  );\r\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"3-notes",children:"3. Notes"}),"\n",(0,s.jsx)(n.p,{children:"This example shows basic screens without styling, you can style later using your preferred approach."}),"\n",(0,s.jsx)(n.p,{children:"Make sure your Kratos server is running locally before testing these screens."}),"\n",(0,s.jsx)(n.p,{children:"In production, always handle errors, sessions, and security properly."}),"\n",(0,s.jsx)(n.h3,{id:"step-4--handle-sessions-and-logout",children:"Step 4 \u2014 Handle Sessions and Logout"}),"\n",(0,s.jsx)(n.p,{children:"After logging in, you need to manage user sessions and provide a way to log out."}),"\n",(0,s.jsx)(n.h4,{id:"1-check-user-session",children:"1. Check User Session"}),"\n",(0,s.jsxs)(n.p,{children:["Create a new file ",(0,s.jsx)(n.code,{children:"session.js"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'import axios from "axios";\r\nimport { oryApi } from "./oryClient";\r\n\r\n/**\r\n * Get the current authenticated session from Ory Kratos.\r\n * Uses the X-Session-Token header (set automatically by oryClient interceptor).\r\n*/\r\nexport async function getSession() {\r\n  try {\r\n    const { data } = await oryApi.get("/sessions/whoami");\r\n    return data; // contains identity, traits, etc.\r\n  } catch (err) {\r\n    if (axios.isAxiosError(err)) {\r\n      console.log("whoami error:", err.response?.status, err.response?.data);\r\n      return null;\r\n    }\r\n    console.error("Error in getSession:", err);\r\n    return null;\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"2-implement-logout",children:"2. Implement Logout"}),"\n",(0,s.jsx)(n.p,{children:"Add a logout function to oryClient.js or a separate file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'import axios from "axios";\r\nimport { oryApi } from "./oryClient";\r\nimport { clearSessionToken, getSessionTokenSync } from "./authToken";\r\n\r\nexport async function logout() {\r\n  try {\r\n    const token = getSessionTokenSync();\r\n    if (token) {\r\n      // API logout: send session_token in the request body\r\n      await oryApi.post("/self-service/logout/api", { session_token: token });\r\n    }\r\n  } catch (err) {\r\n    if (axios.isAxiosError(err)) {\r\n      console.error("Logout failed:", err.response?.data || err.message);\r\n    } else {\r\n      console.error("Logout failed:", err);\r\n    }\r\n  } finally {\r\n    await clearSessionToken();\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"3-integrate-in-screens",children:"3. Integrate in Screens"}),"\n",(0,s.jsxs)(n.p,{children:["You can call ",(0,s.jsx)(n.code,{children:"getSession()"})," on app start or screen mount to check if the user is logged in."]}),"\n",(0,s.jsx)(n.p,{children:"Add a Logout button in your main app screen:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'import { Button } from "react-native";\r\nimport { logout } from "./oryClient";\r\n\r\n<Button title="Logout" onPress={logout} />\n'})}),"\n",(0,s.jsx)(n.h4,{id:"4-notes-1",children:"4. Notes"}),"\n",(0,s.jsx)(n.p,{children:"These are basic examples to demonstrate session handling."}),"\n",(0,s.jsx)(n.p,{children:"In production, consider secure storage for tokens, proper error handling, and refreshing sessions."}),"\n",(0,s.jsx)(n.p,{children:"Make sure your Kratos server is running when testing session endpoints."}),"\n",(0,s.jsx)(n.h3,{id:"step-5--test-the-authentication-flow",children:"Step 5 \u2014 Test the Authentication Flow"}),"\n",(0,s.jsx)(n.p,{children:"Now that you have implemented login, registration, session handling, and logout, let's test the full authentication flow."}),"\n",(0,s.jsx)(n.h4,{id:"1-start-your-app",children:"1. Start your app"}),"\n",(0,s.jsx)(n.p,{children:"Make sure your React Native app is running (Expo):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm start\r\nor\r\nexpo start\n"})}),"\n",(0,s.jsx)(n.h4,{id:"2-register-a-new-user",children:"2. Register a new user"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Open the ",(0,s.jsx)(n.strong,{children:"Registration screen"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Enter an email and password."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Submit the form."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"You should see a success alert with the registration response."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"3-login-with-the-new-user",children:"3. Login with the new user"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Open the ",(0,s.jsx)(n.strong,{children:"Login screen"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Enter the same credentials."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Submit the form."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"You should see a success alert and session information."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"4-check-session",children:"4. Check session"}),"\n",(0,s.jsxs)(n.p,{children:["Call the ",(0,s.jsx)(n.code,{children:"getSession()"})," function (or navigate to a protected screen) to verify the user is authenticated."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"const session = await getSession();\r\nconsole.log(session);\n"})}),"\n",(0,s.jsx)(n.h4,{id:"5-logout",children:"5. Logout"}),"\n",(0,s.jsxs)(n.p,{children:["Press the ",(0,s.jsx)(n.strong,{children:"Logout button"}),".\r\nCall ",(0,s.jsx)(n.code,{children:"getSession()"})," again, it should return null or indicate the user is logged out."]}),"\n",(0,s.jsx)(n.p,{children:"This step ensures your app works end-to-end with Ory Kratos.\r\nTest each screen and flow to confirm everything is connected correctly.\r\nAlways keep your Kratos server running during testing."}),"\n",(0,s.jsx)(n.h3,{id:"step-6--optional-enhancements--next-steps",children:"Step 6 \u2014 Optional Enhancements / Next Steps"}),"\n",(0,s.jsx)(n.p,{children:"After completing the basic authentication flow, consider adding the following enhancements:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Form Validation"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ensure that email and password fields have proper validation before sending requests."}),"\n",(0,s.jsx)(n.li,{children:"Show inline error messages for a better UX."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Secure Storage"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Store session tokens securely using libraries like ",(0,s.jsx)(n.code,{children:"react-native-keychain"})," or ",(0,s.jsx)(n.code,{children:"SecureStore"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Error Handling"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Handle API errors gracefully, including network failures and invalid credentials."}),"\n",(0,s.jsx)(n.li,{children:"Display user-friendly messages instead of raw API errors."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Styling and UX"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Style the login and registration screens with your preferred design system or CSS-in-JS library."}),"\n",(0,s.jsx)(n.li,{children:"Add loading indicators while API requests are in progress."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Deployment Considerations"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Replace ",(0,s.jsx)(n.code,{children:"localhost"})," with your production Ory Kratos server URL."]}),"\n",(0,s.jsx)(n.li,{children:"Ensure HTTPS is used for all requests."}),"\n",(0,s.jsx)(n.li,{children:"Configure CORS and secure headers if needed."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["These enhancements are optional but recommended for production applications.",(0,s.jsx)(n.br,{}),"\n","They improve security, reliability, and the overall developer and user experience."]})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(6540);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);